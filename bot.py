import os
import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from yt_dlp import YoutubeDL
import subprocess
import tempfile

# üîπ –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Ç–æ–∫–µ–Ω —Å–≤–æ–µ–≥–æ Telegram-–±–æ—Ç–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# --- –§—É–Ω–∫—Ü–∏—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–∏–¥–µ–æ ---
def download_video_as_mp3(url: str) -> str:
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ MP3"""
    tmp_dir = tempfile.mkdtemp()
    video_path = os.path.join(tmp_dir, "video.mp4")
    mp3_path = os.path.join(tmp_dir, "audio.mp3")

    ydl_opts = {"outtmpl": video_path}
    with YoutubeDL(ydl_opts) as ydl:
        ydl.download([url])

    subprocess.run([
        "ffmpeg", "-i", video_path, "-vn", "-ab", "192k", "-ar", "44100", "-y", mp3_path
    ], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

    return mp3_path


# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Å—Å—ã–ª–∫–∞–º–∏ ---
@dp.message(F.text)
async def handle_link(message: Message):
    url = message.text.strip()
    if any(domain in url for domain in ["youtube", "instagram", "facebook", "tiktok"]):
        await message.reply("üéß –ó–∞–≥—Ä—É–∂–∞—é –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é... –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ.")
        try:
            mp3_path = download_video_as_mp3(url)
            await message.reply_audio(audio=open(mp3_path, "rb"))
        except Exception as e:
            await message.reply(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    else:
        await message.reply("üîó –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ (YouTube, Instagram, TikTok, Facebook).")


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
async def main():
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
