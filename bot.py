import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –æ—à–∏–±–∫–∏ –≤ Render)
logging.basicConfig(level=logging.INFO)

# –¢–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("‚ùå BOT_TOKEN not found. Set it in Render Environment Variables.")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ===
@dp.message()
async def handle_message(message: Message):
    await message.answer("üéß –ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É—é –µ–≥–æ –≤ MP3.")

# === Webhook —Å–µ—Ä–≤–µ—Ä ===
async def start_webhook():
    app = web.Application()
    webhook_path = "/webhook"

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook
    SimpleRequestHandler(dp, bot).register(app, path=webhook_path)
    setup_application(app, dp)

    logging.info("‚úÖ Webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ Render")

    return app


if __name__ == "__main__":
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (Render –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥—Å—Ç–∞–≤–∏—Ç PORT)
    web.run_app(start_webhook(), host="0.0.0.0", port=int(os.getenv("PORT", 5000)))
